---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: nbpolicies.vpn.netbird.crossplane.io
spec:
  group: vpn.netbird.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - netbird
    kind: NbPolicy
    listKind: NbPolicyList
    plural: nbpolicies
    singular: nbpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A NbPolicy is an example API type.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A NbPolicySpec defines the desired state of a NbPolicy.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: NbPolicyParameters are the configurable fields of a NbPolicy.
                properties:
                  description:
                    type: string
                  enabled:
                    description: Enabled Policy status
                    type: boolean
                  name:
                    description: Name Policy name identifier
                    type: string
                  rules:
                    description: Rules Policy rule object for policy UI editor
                    items:
                      properties:
                        action:
                          description: Action Policy rule accept or drops packets
                          type: string
                        bidirectional:
                          description: Bidirectional Define if the rule is applicable
                            in both directions, sources, and destinations.
                          type: boolean
                        description:
                          description: Description Policy rule friendly description
                          type: string
                        destinationResource:
                          type: string
                        destinations:
                          description: Destinations Policy rule destination group
                            IDs
                          items:
                            properties:
                              id:
                                description: Id Group ID
                                type: string
                              issued:
                                description: Issued How the group was issued (api,
                                  integration, jwt)
                                type: string
                              name:
                                description: Name Group Name identifier
                                type: string
                              peers_count:
                                description: PeersCount Count of peers associated
                                  to the group
                                type: integer
                              resources_count:
                                description: ResourcesCount Count of resources associated
                                  to the group
                                type: integer
                            required:
                            - name
                            type: object
                          type: array
                        enabled:
                          description: Enabled Policy rule status
                          type: boolean
                        id:
                          description: Id Policy rule ID
                          type: string
                        name:
                          description: Name Policy rule name identifier
                          type: string
                        port_ranges:
                          description: PortRanges Policy rule affected ports ranges
                            list
                          items:
                            properties:
                              end:
                                description: End The ending port of the range
                                type: integer
                              start:
                                description: Start The starting port of the range
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                          type: array
                        ports:
                          description: Ports Policy rule affected ports
                          items:
                            type: string
                          type: array
                        protocol:
                          description: Protocol Policy rule type of the traffic
                          type: string
                        source_resource_name:
                          type: string
                        sources:
                          description: Sources Policy rule source group IDs
                          items:
                            properties:
                              id:
                                description: Id Group ID
                                type: string
                              issued:
                                description: Issued How the group was issued (api,
                                  integration, jwt)
                                type: string
                              name:
                                description: Name Group Name identifier
                                type: string
                              peers_count:
                                description: PeersCount Count of peers associated
                                  to the group
                                type: integer
                              resources_count:
                                description: ResourcesCount Count of resources associated
                                  to the group
                                type: integer
                            required:
                            - name
                            type: object
                          type: array
                      required:
                      - action
                      - bidirectional
                      - enabled
                      - name
                      - protocol
                      type: object
                    type: array
                  source_posture_checks:
                    description: SourcePostureChecks Posture checks ID's applied to
                      policy source groups
                    items:
                      type: string
                    type: array
                required:
                - enabled
                - name
                - rules
                - source_posture_checks
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A NbPolicyStatus represents the observed state of a NbPolicy.
            properties:
              atProvider:
                description: NbPolicyObservation are the observable fields of a NbPolicy.
                properties:
                  description:
                    type: string
                  enabled:
                    description: Enabled Policy status
                    type: boolean
                  id:
                    description: Id Policy ID
                    type: string
                  name:
                    description: Name Policy name identifier
                    type: string
                  rules:
                    description: Rules Policy rule object for policy UI editor
                    items:
                      properties:
                        action:
                          description: Action Policy rule accept or drops packets
                          type: string
                        bidirectional:
                          description: Bidirectional Define if the rule is applicable
                            in both directions, sources, and destinations.
                          type: boolean
                        description:
                          description: Description Policy rule friendly description
                          type: string
                        destinationResource:
                          type: string
                        destinations:
                          description: Destinations Policy rule destination group
                            IDs
                          items:
                            properties:
                              id:
                                description: Id Group ID
                                type: string
                              issued:
                                description: Issued How the group was issued (api,
                                  integration, jwt)
                                type: string
                              name:
                                description: Name Group Name identifier
                                type: string
                              peers_count:
                                description: PeersCount Count of peers associated
                                  to the group
                                type: integer
                              resources_count:
                                description: ResourcesCount Count of resources associated
                                  to the group
                                type: integer
                            required:
                            - name
                            type: object
                          type: array
                        enabled:
                          description: Enabled Policy rule status
                          type: boolean
                        id:
                          description: Id Policy rule ID
                          type: string
                        name:
                          description: Name Policy rule name identifier
                          type: string
                        port_ranges:
                          description: PortRanges Policy rule affected ports ranges
                            list
                          items:
                            properties:
                              end:
                                description: End The ending port of the range
                                type: integer
                              start:
                                description: Start The starting port of the range
                                type: integer
                            required:
                            - end
                            - start
                            type: object
                          type: array
                        ports:
                          description: Ports Policy rule affected ports
                          items:
                            type: string
                          type: array
                        protocol:
                          description: Protocol Policy rule type of the traffic
                          type: string
                        source_resource_name:
                          type: string
                        sources:
                          description: Sources Policy rule source group IDs
                          items:
                            properties:
                              id:
                                description: Id Group ID
                                type: string
                              issued:
                                description: Issued How the group was issued (api,
                                  integration, jwt)
                                type: string
                              name:
                                description: Name Group Name identifier
                                type: string
                              peers_count:
                                description: PeersCount Count of peers associated
                                  to the group
                                type: integer
                              resources_count:
                                description: ResourcesCount Count of resources associated
                                  to the group
                                type: integer
                            required:
                            - name
                            type: object
                          type: array
                      required:
                      - action
                      - bidirectional
                      - enabled
                      - name
                      - protocol
                      type: object
                    type: array
                  source_posture_checks:
                    description: SourcePostureChecks Posture checks ID's applied to
                      policy source groups
                    items:
                      type: string
                    type: array
                required:
                - enabled
                - name
                - rules
                - source_posture_checks
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
